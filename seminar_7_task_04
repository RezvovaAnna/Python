"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""
import random

class Matrix:
    def __init__(self, my_list):
        self.my_list = my_list

    def __str__(self):
        for row in self.my_list:
            for i in row:
                print(f"{i:4}", end="")
            print()
        return ''


    def __add__(self, other):
        for i in range(len(self.my_list)):
            for j in range(len(other.my_list[i])):
                self.my_list[i][j] = self.my_list[i][j] + other.my_list[i][j]
        return Matrix.__str__(self)

def gen_matrix (row, col):
    new_m =[[random.randint(1, 11) for j in range(col)] for i in range(row)]
    return new_m

n = int(input("Введите количество столбцов матрице: "))
m = int(input("Введите количество строк матрице: "))
matrix_1 = Matrix(gen_matrix(m, n))
matrix_2 = Matrix(gen_matrix(m, n))
matrix_1.__str__()
print("                     ")
matrix_2.__str__()
print("                     ")
print("Матрица 1 + матрица 2 \n          ")
print(f"{matrix_1.__add__(matrix_2)}")
